name: Release
on:
  push:
    branches:
      - master

permissions:
  contents: write # because we want our workflow to update the package json of the packages with the latest version number

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    if: ${{ !contains(github.event.head_commit.message, '[skip release]') }}
    environment: Production
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    env:
      HUSKY: 0
      GITHUB_TOKEN: ${{ secrets.PAT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup node.js LTS
        uses: actions/setup-node@v3
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Build the packages
        run: pnpm build

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - name: Release
        env:
          NPM_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
          NPM_USERNAME: "sarthakdev"
          NPM_PASSWORD: ${{ secrets.NPM_PASSWORD }}
          NPM_EMAIL: "contact.sarthakjain@gmail.com"
        run: pnpm semantic-release
